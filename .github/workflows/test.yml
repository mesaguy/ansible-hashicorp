---
name: Test and Release
on:
  push:
    branches:
      - master
jobs:
  molecule_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scenario:
          - {name: default, image_distro: centos8, image_tag: centos-8.3}
          - {name: default, image_distro: debian, image_tag: debian-9}
          - {name: default, image_distro: archlinux, image_tag: latest}
          - {name: gpg, image_distro: centos8, image_tag: centos-8.3}
          - {name: gpg, image_distro: debian, image_tag: debian-9}
          - {name: gpg, image_distro: archlinux, image_tag: latest}
          - {name: unconfigured, image_distro: centos8, image_tag: centos-8.3}
          - {name: unconfigured, image_distro: debian, image_tag: debian-9}
          - {name: unconfigured, image_distro: archlinux, image_tag: latest}
          - {name: official_packages, image_distro: centos8, image_tag: centos-8.3}
          - {name: official_packages, image_distro: debian, image_tag: debian-9}
          - {name: distro_packages, image_distro: archlinux, image_tag: latest}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv --upgrade-strategy=only-if-needed
          pipenv install

      - name: Show ansible version
        run: pipenv run ansible --version

      - name: Run molecule tests
        run: |
          MOLECULE_SCENARIO=${{ matrix.scenario.name }} \
          IMAGE_DISTRO=${{ matrix.scenario.image_distro }} \
          IMAGE_TAG=${{ matrix.scenario.image_tag }} \
          pipenv run molecule test -s ${{ matrix.scenario.name }}
  release:
    needs:
      - molecule_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: galaxy
        uses: robertdebock/galaxy-action@1.1.0
        with:
          galaxy_api_key: ${{ secrets.GALAXY_API_KEY }}
